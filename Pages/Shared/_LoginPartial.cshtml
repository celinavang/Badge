@using Microsoft.AspNetCore.Identity
@using Badge.Areas.Identity.Data
@inject SignInManager<ApplicationUser> SignInManager
@inject UserManager<ApplicationUser> UserManager

<ul class="l-nav-container">
@if (SignInManager.IsSignedIn(User))
{
        var user = @UserManager.GetUserAsync(User).Result;
        var rndm = new Random(user.LName.Length*user.FName.Length);
        int hue = rndm.Next(0, 360);
    <li class="l-nav-user">
            @if (user.AppUImageData != null)
            {

                <div class="No-Img" >
                    <img style="width:100%; height:100%;" src="data:image/png;base64,@user.AppUImageData" />
                </div>
            }
            else
            {
                
                <div class="No-Img" style="background-color:hsl(@hue, 55%, 60%)">
                    <p>@user.FName.ToCharArray()[0]@user.LName.ToCharArray()[0]</p>
                </div>

            }
            <a asp-area="Identity" asp-page="/Account/Manage/Index" title="Manage">@UserManager.GetUserAsync(User).Result.FName @UserManager.GetUserAsync(User).Result.LName</a> 
        
        <form class="form-inline" asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Page("/", new { area = "" })" method="post" >
            <button  type="submit" class="">Log ud</button>
        </form>
    </li>
}
else
{
    <li class="l-nav-item" style="margin-bottom:30px; font-size:20px; text-align:center; font-weight:600;">
        <a asp-area="Identity" asp-page="/Account/Login">Log ind</a>
    </li>
}
</ul>
