@page
@using Badge.Interfaces
@using Badge.Resources
@model Badge.Pages.Admin.SalesAdmin.CreateModel
@inject ISalesService salesService
@{
    ViewData["Title"] = "Opret";

}

<h1>Opret</h1>
<div class="grid col4" style="grid-template-columns: auto auto auto 25%;">
    <div class="index-content" style="grid-area: 1 / 1 / span 1 / span 3;">
        <h4>Opret et salg</h4>
        <form method="post">
            <div class="box-full">
                <div class="" style="display:inline-block; width:60%;">

                    @if (Model.SelectedTicket != null)
                    {
                        <div class="form-group" style="margin-bottom:10px;">
                            <label class="form-check-label" asp-for="Sale.Ticket"></label>
                            <input asp-for="Sale.TicketId" hidden/><br />
                            @Model.Sale.TicketId
                            <span asp-validation-for="Sale.TicketId" class="text-danger"></span>
                        </div>

                        <div class="form-group" style="margin-bottom:10px;">
                            <label class="form-check-label" asp-for="Sale.Seller"></label>
                            @if (salesService.GetAssignedMemberAsync(Model.SelectedTicket.Id).Result != null)
                            {
                                <input type="hidden" asp-for="Sale.SellerId" />
                                <br />
                                @Html.DisplayFor(model => model.Sale.Seller.User.FullName)
                            }
                            else
                            {
                                <select asp-for="Sale.SellerId" class="form-control" asp-items="ViewBag.MemberId"></select>
                            }
                            <span asp-validation-for="Sale.SellerId" class="text-danger"></span>
                        </div>
                        <div class="form-group" style="margin-bottom:10px;">
                            <label class="form-check-label" asp-for="Sale.Channel"></label>
                            <select asp-for="Sale.ChannelId" class="form-control" asp-items="ViewBag.ChannelId"></select>
                            <span asp-validation-for="Sale.ChannelId" class="text-danger"></span>
                        </div>
                        <div class="form-group" style="margin-bottom:10px;">
                            <label class="form-check-label" asp-for="Sale.SalesDate"></label><br />
                            <input asp-for="Sale.SalesDate" type="date" style="width:100%;"/>
                            <span asp-validation-for="Sale.SalesDate" class="text-danger"></span>
                        </div>
                        <div class="form-group" style="margin-bottom:10px;">
                            <label class="form-check-label" asp-for="Sale.PaymentCollected"></label>
                            <input asp-for="Sale.PaymentCollected" />
                            <span asp-validation-for="Sale.PaymentCollected" class="text-danger"></span>
                        </div>
                        <div class="form-group" style="margin-bottom:20px;">
                            <input type="submit" class="btn-full btn-def" />
                        </div>
                    }

                </div>
            </div>


        </form>
    </div>
    <div class="index-content" id="sales-ticket-container" style="grid-area:1 / 4;">
        <div class="grid" style="gap:10px!important; ">
            <h4>Tilgængelige lodsedler</h4>
            @foreach (var item in Model.Tickets)
            {
                <a asp-route-selected="@item.Id">

                    <div class="ticket-display">
                        <b>@item.Id</b><br />
                        @if (salesService.GetAssignedGroupAsync(item.Id).Result != null)
                        {
                            <span style="color:@ColorResource.ResourceManager.GetString(@salesService.GetAssignedGroupAsync(item.Id).Result.GroupType.Name);">@salesService.GetAssignedGroupAsync(item.Id).Result.Name</span>
                        }<br />

                        @if (salesService.GetAssignedMemberAsync(item.Id).Result != null)
                        {
                            <span>@salesService.GetAssignedMemberAsync(item.Id).Result.User.FullName</span>
                        } else {<span>Ikke tildelt et medlem</span>}
                    </div>
                </a>
            }
        </div>
    </div>
</div>


<div>
    <a asp-page="Index">Tilbage til liste</a>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}
